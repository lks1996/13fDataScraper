# 워크플로우의 이름
name: Deploy 13F Scraper on Windows Laptop

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    name: Build and Deploy Job
    runs-on: self-hosted

    steps:
      # 1단계: 소스 코드 가져오기
      - name: 1. Checkout source code
        uses: actions/checkout@v4

      # 2단계: JDK 17 환경 설정
      - name: 2. Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3단계: application.yml을 생성하기 전에 먼저 디렉토리를 만든다.
      - name: 3. Create application.yml from secret
        run: |
          echo "Ensuring directory exists..."
          # src/main/resources 경로가 없으면 강제로 생성합니다.
          New-Item -ItemType Directory -Force -Path "src/main/resources"
          
          echo "Creating application.yml..."
          # 이제 폴더가 확실히 존재하므로, 파일을 안전하게 생성할 수 있습니다.
          echo "${{ secrets.APPLICATION_YML }}" > src/main/resources/application.yml

      # 4단계: Gradle로 빌드 (이전의 3단계가 4단계로 밀립니다)
      - name: 4. Build with Gradle
        run: ./gradlew.bat clean bootJar

      # 5단계: 서비스 재시작하여 배포 (이전의 4단계가 5단계로 밀립니다)
      - name: 5. Deploy (Restart Windows Service)
        run: |
          
          echo "--> Ensuring the deployment directory exists..."
          # C:\13f-server 경로가 없으면 강제로 생성합니다.
          New-Item -ItemType Directory -Force -Path "C:\13f-server"
        
          echo "--> Stopping the existing service..."
          sc stop 13fDataScraper
          
          echo "--> Copying the new JAR file..."
          Copy-Item -Path "build\libs\*.jar" -Destination "C:\13f-server\app.jar" -Force
          
          echo "--> Starting the service..."
          sc start 13fDataScraper
          
          echo "--> Deployment finished!"